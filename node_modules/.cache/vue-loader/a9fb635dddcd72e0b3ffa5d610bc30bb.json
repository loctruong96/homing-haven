{"remainingRequest":"C:\\Users\\kidab\\csci\\homing-haven\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kidab\\csci\\homing-haven\\src\\components\\NewRec.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kidab\\csci\\homing-haven\\src\\components\\NewRec.vue","mtime":1584075220960},{"path":"C:\\Users\\kidab\\csci\\homing-haven\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kidab\\csci\\homing-haven\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NewRec.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"NewRec.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"newrec\">\r\n        <div class=\"ncBanner\">\r\n            <div class=\"span\">\r\n                <h1>Create a Resource</h1>\r\n            </div>\r\n        </div>\r\n        <transition name=\"fade\">\r\n            <div v-if=\"performingRequest\" class=\"loading\">\r\n                <p>Loading...</p>\r\n            </div>\r\n        </transition>\r\n        <section>\r\n\r\n            <div class=\"col1\">\r\n\r\n                <div class=\"profile\">\r\n<!--                    <img height=\"150px\" width=\"150px\" src=\"../assets/user_icon.png\"/>-->\r\n\r\n                    <h3 style=\"float: right; \">Help us know where to send people in need....</h3>\r\n                    <form @submit.prevent>\r\n                        <p style=\" margin-top: 20px;\">\r\n                            Resource:<input v-model.trim=\"name\" type=\"text\"  id=\"name\" placeholder=\"What resource are you providing??\"/>\r\n                        </p>\r\n                        <p>\r\n                            Description:<el-input\r\n                                type=\"textarea\"\r\n                                placeholder=\"What is your resource about?\"\r\n                                v-model=\"description\"\r\n                                maxlength=\"500\"\r\n                                show-word-limit\r\n                        >\r\n                        </el-input>\r\n                        </p>\r\n                        <p style=\" margin-top: 20px;\">\r\n                            Link:<input v-model.trim=\"link\" type=\"text\"  id=\"link\" placeholder=\"/resource/resourcelink\"/>\r\n                        </p>\r\n                        <p>\r\n                        Moderators:\r\n                            <vue-tags-input\r\n                                    v-model=\"moderator\"\r\n                                    :tags=\"moderators\"\r\n                                    :validation=\"validation\"\r\n                                    placeholder=\"Add moderators by emails\"\r\n                                    @tags-changed=\"newTags => moderators = newTags\"\r\n                            />\r\n                        </p>\r\n                        \r\n                        <!-- <p>\r\n                            Rules:<el-input\r\n                                type=\"textarea\"\r\n                                placeholder=\"Resource Rules.\"\r\n                                v-model=\"rules\"\r\n                                maxlength=\"500\"\r\n                                show-word-limit\r\n                        >\r\n                        </el-input>\r\n                        </p> -->\r\n\r\n                        <label for=\"country\">Country</label>\r\n                        <!--                    <input v-model.trim=\"signupForm.country\" type=\"text\" placeholder=\"\" id=\"country\" />-->\r\n                        <select v-model=\"country\" id=\"country\" >\r\n                            <option v-for=\"country in countries\" v-bind:value=\"country\">\r\n                                {{ country }}\r\n                            </option>\r\n                        </select>\r\n                        <label for=\"state\">State</label>\r\n                        <!--                    <input v-model.trim=\"signupForm.state\" type=\"text\" placeholder=\"\" id=\"state\" />-->\r\n                        <select v-model=\"state\" id=\"state\" >\r\n                            <option v-for=\"state in states[country]\" v-bind:value=\"state\">\r\n                                {{ state }}\r\n                            </option>\r\n                        </select>\r\n                        <p>\r\n                            <label for=\"city\">City</label>\r\n                            <input v-model.trim=\"city\" type=\"text\" :disabled=\"state === ''\" placeholder=\"\" id=\"city\" />\r\n                        </p>\r\n                        <div>\r\n                            <button @click=\"createCommunity\" class=\"button\">Create Resource</button>\r\n                            <br><br>\r\n                            <button @click=\"cancel\" class=\"button\">Cancel</button>\r\n                        </div>\r\n                        <transition name=\"fade\">\r\n                            <img v-if=\"showSuccess\" class=\"success\" style=\"margin-left: 10px;\" height=\"30px\" width=\"33px\" src=\"../assets/green_check.png\"/>\r\n                        </transition>\r\n                    </form>\r\n                    <transition name=\"fade\">\r\n                        <div v-if=\"errorMsg !== ''\" class=\"error-msg\">\r\n                            <p>{{ errorMsg }}</p>\r\n                        </div>\r\n                    </transition>\r\n                </div>\r\n            </div>\r\n            <div class=\"col2\">\r\n                <div class=\"user-form\">\r\n                    <h5 style=\" margin-bottom: 20px;\">What is your resource about?</h5>\r\n                    <ListInterests v-bind:interests=\"interests\"\r\n                                   @remove-interest=\"removeInterest\" v-if=\"interests.length\"\r\n                    />\r\n                    <p class=\"emptylist\" v-else>How lonely... add try adding an interest.</p>\r\n                    <AddInterest @add-interest=\"addInterest\"/>\r\n                </div>\r\n                <div class=\"user-form\">\r\n                    <h5 style=\" margin-bottom: 20px;\">Community that matched your interests or location</h5>\r\n                    <ListCommunities v-bind:communities=\"communities\"\r\n                                     @remove-community=\"removeCommunity\" v-if=\"4\"\r\n                    />\r\n                    <p class=\"emptylist\" v-else>How lonely... try looking for a community.</p>\r\n                                        <AddCommunity @add-community=\"addCommunity\"/>\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState } from 'vuex'\r\n    import ListInterests from \"@/components/ListInterests\"\r\n    import ListCommunities from \"@/components/ListCommunities\";\r\n    import AddInterest from \"@/components/AddInterest\"\r\n    import AddCommunity from \"@/components/AddCommunity\";\r\n    import VueTagsInput from '@johmun/vue-tags-input';\r\n    import {communityCollection} from \"../firebaseConfig\";\r\n    const fb = require('../firebaseConfig.js');\r\n    export default {\r\n        data() {\r\n            return {\r\n                communities: [],\r\n                moderator: '',\r\n                moderators: [],\r\n                name: '',\r\n                title: '',\r\n                city: '',\r\n                state: '',\r\n                link: '',\r\n                rules: '',\r\n                description: '',\r\n                country: 'United States',\r\n                showSuccess: false,\r\n                performingRequest: false,\r\n                errorMsg: '',\r\n                interests: [\r\n                    {id: 1, title:\"Books\", completed: false},\r\n                    {id: 2, title:\"Career\", completed: false},\r\n                    {id: 3, title:\"Legal\", completed: false},\r\n                    {id: 4, title:\"Food Assistance\", completed: false},\r\n                    {id: 5, title:\"Photography\", completed: false},\r\n                ],\r\n                properName: /^[a-zA-Z]+(([\\',. -][a-zA-Z ])?[a-zA-Z]*)*$/,\r\n                properLink: /^[a-z0-9]*$/,\r\n                countries: [\"United States\"],\r\n                states: {\"United States\": [\"Alabama\",\r\n                        \"Alaska\",\r\n                        \"Arizona\",\r\n                        \"Arkansas\",\r\n                        \"California\",\r\n                        \"Colorado\",\r\n                        \"Connecticut\",\r\n                        \"Delaware\",\r\n                        \"Florida\",\r\n                        \"Georgia\",\r\n                        \"Hawaii\",\r\n                        \"Idaho\",\r\n                        \"Illinois\",\r\n                        \"Indiana\",\r\n                        \"Iowa\",\r\n                        \"Kansas\",\r\n                        \"Kentucky\",\r\n                        \"Louisiana\",\r\n                        \"Maine\",\r\n                        \"Maryland\",\r\n                        \"Massachusetts\",\r\n                        \"Michigan\",\r\n                        \"Minnesota\",\r\n                        \"Mississippi\",\r\n                        \"Missouri\",\r\n                        \"Montana\",\r\n                        \"Nebraska\",\r\n                        \"Nevada\",\r\n                        \"New Hampshire\",\r\n                        \"New Jersey\",\r\n                        \"New Mexico\",\r\n                        \"New York\",\r\n                        \"North Carolina\",\r\n                        \"North Dakota\",\r\n                        \"Ohio\",\r\n                        \"Oklahoma\",\r\n                        \"Oregon\",\r\n                        \"Pennsylvania\",\r\n                        \"Rhode Island\",\r\n                        \"South Carolina\",\r\n                        \"South Dakota\",\r\n                        \"Tennessee\",\r\n                        \"Texas\",\r\n                        \"Utah\",\r\n                        \"Vermont\",\r\n                        \"Virginia\",\r\n                        \"Washington\",\r\n                        \"West Virginia\",\r\n                        \"Wisconsin\",\r\n                        \"Wyoming\"]},\r\n                validation: [{\r\n                    classes: 'valid-email',\r\n                    rule: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                    disableAdd: true,\r\n                }],\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState(['userProfile'])\r\n        },\r\n        methods: {\r\n            updateProfile() {\r\n                this.$store.dispatch('updateProfile', {\r\n                    name: this.name !== '' ? this.name : this.userProfile.name,\r\n                    title: this.title !== '' ? this.title : this.userProfile.title\r\n                });\r\n\r\n                this.name = ''\r\n                this.title = ''\r\n\r\n                this.showSuccess = true\r\n\r\n                setTimeout(() => { this.showSuccess = false }, 2000)\r\n            },\r\n            removeInterest(id) {\r\n                this.interests = this.interests.filter(t=> t.id !== id)\r\n            },\r\n            addInterest(interest) {\r\n                this.interests.push(interest)\r\n            },\r\n            removeCommunity(id) {\r\n                this.communities = this.communities.filter(t=> t.id !== id);\r\n            },\r\n            addCommunity(community) {\r\n                this.communities.push(community);\r\n\r\n            },\r\n            cancel(){\r\n                this.$router.push('/dashboard');\r\n            },\r\n            creatorAsModerator(element) {\r\n                return element.text === this.userProfile.email;\r\n            }\r\n            ,\r\n            async createCommunity(){\r\n                if(!this.name || !this.city || !this.state || !this.country){\r\n                    this.performingRequest = false;\r\n                    if(!this.name){\r\n                        this.errorMsg = \"Community name is required.\"\r\n                    } else if(!this.city){\r\n                        this.errorMsg = \"City is required.\"\r\n                    } else if(!this.state){\r\n                        this.errorMsg = \"State is required.\"\r\n                    } else if(!this.country){\r\n                        this.errorMsg = \"Country is required.\"\r\n                    } else if(!this.link){\r\n                        this.errorMsg = \"Link is required.\"\r\n                    }\r\n                } else if(this.interests.length > 30){\r\n                    this.performingRequest = false;\r\n                    this.errorMsg = \"We currently only allow a community to have up to 30 interests.\"\r\n                } else if(this.moderators.findIndex(this.creatorAsModerator) < 0){\r\n                    this.performingRequest = false;\r\n                    this.errorMsg = `${this.userProfile.email} must be a moderator as the creator.`\r\n                } else if(!this.properName.test(this.name)){\r\n                    this.performingRequest = false;\r\n                    this.errorMsg = \"Invalid naming format. Alpha characters and space only.\"\r\n                } else if(!this.properLink.test(this.link)){\r\n                    this.performingRequest = false;\r\n                    this.errorMsg = \"Invalid link format. Must only contains lower case alphanumeric.\"\r\n                } else {\r\n                    // check if all emails are actually valid\r\n                    this.performingRequest = true;\r\n                    const userRef = fb.usersCollection;\r\n                    let valid = true;\r\n                    const finalMods = [];\r\n                    await Promise.all(this.moderators.map(async (mod) => {\r\n                        finalMods.push(mod.text);\r\n                        const query  = await userRef.where(\"email\", \"==\", mod.text);\r\n                        const querySnapshot = await query.get();\r\n                        if(querySnapshot.size === 0){\r\n                            valid = false;\r\n                            this.performingRequest = false;\r\n                            this.errorMsg = `Cannot find user associated with ${mod.text}.`\r\n                        }\r\n                    }));\r\n                    // check if city is actually valid\r\n                    const cityRef = fb.countryCollection.doc(this.country).collection(this.state).doc(this.city);\r\n                    const city = await cityRef.get();\r\n                    if (!city.exists){\r\n                        valid = false;\r\n                        this.performingRequest = false;\r\n                        this.errorMsg = `${this.city} city is not current supported. Please select a nearby city.`\r\n                    }\r\n                    // check if community they wanted to joined is actually valid.\r\n                    const communityRef = fb.communityCollection;\r\n                    await Promise.all(this.communities.map(async (com) => {\r\n                        const query  = await communityRef.where(\"link\", \"==\", com.title);\r\n                        const querySnapshot = await query.get();\r\n                        if(querySnapshot.size === 0){\r\n                            valid = false;\r\n                            this.performingRequest = false;\r\n                            this.errorMsg = `Cannot find community ${com.title}.`\r\n                        }\r\n                    }));\r\n                    if(valid){\r\n                        const resourceRef = fb.resourceCollection.doc(this.link);\r\n                        resourceRef.get().then((doc) => {\r\n                            if(doc.exists){\r\n                                this.performingRequest = false;\r\n                                this.errorMsg = `The link homing.app/resource/${this.link} is already taken.`\r\n                            } else {\r\n                                this.performingRequest = true;\r\n                                const resource = {\r\n                                    createdOn: new Date(),\r\n                                    subscribers: 0,\r\n                                    moderators: finalMods,\r\n                                    city: this.city,\r\n                                    state: this.state,\r\n                                    country: this.country,\r\n                                    interests: this.interests,\r\n                                    name: this.name,\r\n                                    link: this.link,\r\n                                    description: this.description,\r\n                                    rules: this.rules,\r\n                                };\r\n                                // create the document\r\n                                resourceRef.set(resource).then(async () => {\r\n                                    //add the resource to the community they selected\r\n                                    await Promise.all(this.communities.map(async (com) => {\r\n                                        const query  = await communityRef.where(\"link\", \"==\", com.title);\r\n                                        const docs = await query.get();\r\n                                        docs.forEach(doc => {\r\n                                             fb.communityCollection.doc(doc.id).collection('resources').doc(this.link).set(resource);\r\n                                        })\r\n                                    }));\r\n                                    // set the current resource\r\n                                    this.performingRequest = false;\r\n                                    this.$store.commit('setCurrentResource', this.link);\r\n                                    await this.$store.dispatch('fetchResourceProfile');\r\n                                    this.$router.push(`/resource/${this.link}`);\r\n                                });\r\n                            }\r\n                        }).catch((err) => {\r\n                            this.performingRequest = false;\r\n                            this.errorMsg = err;\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        components: {\r\n            ListInterests,\r\n            AddInterest,\r\n            VueTagsInput,\r\n            ListCommunities,\r\n            AddCommunity\r\n        }\r\n    }\r\n</script>\r\n"]}]}